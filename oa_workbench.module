<?php

/**
 * @file
 * Code for the Open Atrium Workbench module.
 */

/**
 * Implements hook_block_info_alter().
 */
function oa_workbench_block_info_alter(&$blocks, $theme, $code_blocks) {
  if (isset($blocks['workbench']['block'])) {
    // Don't place it in a region by default. Workbench normally wants to place
    // this at the top of the 'content' region.
    unset($blocks['workbench']['block']['region']);
    unset($blocks['workbench']['block']['weight']);
  }
}

/**
 * Loops through a Panels display and gets a new pid.
 *
 * @param object $display
 *   A panels_display object.
 *
 * @return string
 *   A string representing a pid that is one higher than the last one, for
 *   example: "new-17" (if the highest existing is "new-16").
 */
function oa_workbench_get_new_pid($display) {
  // Get the pid that is one higher than the highest.
  $new_pid = 0;
  foreach (array_keys($display->content) as $key) {
    list ($temp, $pid) = explode('-', $key);
    $pid = (int)$pid;
    if ($pid > $new_pid) {
      $new_pid = $pid;
    }
  }
  $new_pid++;

  return 'new-' . $new_pid;
}

/**
 * Gets a Panels pane object representing the Workbench pane.
 *
 * @param string $pid
 *   The pid value to use for the new pane.
 *
 * @return object
 *   A Panels pane object.
 */
function oa_workbench_get_workbench_pane($pid) {
  $pane = new stdClass();
  $pane->pid = $pid;
  $pane->panel = 'sidebar';
  $pane->type = 'block';
  $pane->subtype = 'workbench-block';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_title' => 0,
    'override_title_text' => '',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 0;
  $pane->locks = array();

  return $pane;
}

/**
 * Implements hook_default_page_manager_handlers_alter().
 */
function oa_workbench_default_page_manager_handlers_alter(&$handlers) {
  foreach ($handlers as &$handler) {
    if ($handler->task == 'node_edit') {
      $new_pid = oa_workbench_get_new_pid($handler->conf['display']);
      $pane = oa_workbench_get_workbench_pane($new_pid);

      // Add the workbench block to the top of the sidebar.
      $handler->conf['display']->content[$new_pid] = $pane;
      array_unshift($handler->conf['display']->panels['sidebar'], $new_pid);
    }
  }
}

/**
 * Implements hook_default_panels_mini_alter().
 */
function oa_workbench_default_panels_mini_alter(&$panels) {
  if (isset($panels['section_sidebar_top'])) {
    $new_pid = oa_workbench_get_new_pid($panels['section_sidebar_top']->display);
    $pane = oa_workbench_get_workbench_pane($new_pid);

    // Add the workbench block to the top of the sidebar mini-panel.
    $panels['section_sidebar_top']->display->content[$new_pid] = $pane;
    array_unshift($panels['section_sidebar_top']->display->panels['middle'], $new_pid);
  }
}
